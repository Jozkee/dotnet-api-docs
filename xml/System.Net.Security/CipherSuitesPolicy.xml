<Type Name="CipherSuitesPolicy" FullName="System.Net.Security.CipherSuitesPolicy">
  <TypeSignature Language="C#" Value="public sealed class CipherSuitesPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherSuitesPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.CipherSuitesPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherSuitesPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherSuitesPolicy sealed" />
  <TypeSignature Language="F#" Value="type CipherSuitesPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies allowed cipher suites.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherSuitesPolicy (System.Collections.Generic.IEnumerable&lt;System.Net.Security.TlsCipherSuite&gt; allowedCipherSuites);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Net.Security.TlsCipherSuite&gt; allowedCipherSuites) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedCipherSuites As IEnumerable(Of TlsCipherSuite))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherSuitesPolicy(System::Collections::Generic::IEnumerable&lt;System::Net::Security::TlsCipherSuite&gt; ^ allowedCipherSuites);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.CipherSuitesPolicy : seq&lt;System.Net.Security.TlsCipherSuite&gt; -&gt; System.Net.Security.CipherSuitesPolicy" Usage="new System.Net.Security.CipherSuitesPolicy allowedCipherSuites" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="allowedCipherSuites" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Security.TlsCipherSuite&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedCipherSuites">The collection of cipher suites allowed in this policy for negotiation.</param>
        <summary>Initializes a cipher suite policy that can be used on a client or server authentication.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
> [!NOTE]
> Defining a chipher suite policy on <xref:System.Net.Security.SslStream> authentication will prevent the OS of the ability to decide which are the best cipher suites to negotiate with and will need of your attention to manually check and update this code. It is strongly recommended to hold off the use of this property and rely on your constantly updated OS policy.

## Remarks
Unlike the OS underlying SSL/TLS implementation, the order of the <xref:System.Net.Security.TlsCipherSuite> elements in `allowedCipherSuites` does not determine their priority in the client-server negotiation. It is required to use OSX or Unix-based systems with OpenSSL 1.1.1 in order to initialize an instance of this class.

 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Platform does not meet the requirements to setup a policy.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedCipherSuites">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Net.Security.TlsCipherSuite&gt; AllowedCipherSuites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Net.Security.TlsCipherSuite&gt; AllowedCipherSuites" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.CipherSuitesPolicy.AllowedCipherSuites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedCipherSuites As IEnumerable(Of TlsCipherSuite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Net::Security::TlsCipherSuite&gt; ^ AllowedCipherSuites { System::Collections::Generic::IEnumerable&lt;System::Net::Security::TlsCipherSuite&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedCipherSuites : seq&lt;System.Net.Security.TlsCipherSuite&gt;" Usage="System.Net.Security.CipherSuitesPolicy.AllowedCipherSuites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Net.Security.TlsCipherSuite&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of cipher suites passed through <see cref="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})" />, which are the ones allowed to negotiate with on a client or server <see cref="T:System.Net.Security.SslStream" /> authentication.</summary>
        <value>The collection of cipher suites allowed in this policy for negotiation.</value>
        <remarks>
          <format type="text/markdown">
  <![CDATA[  
> [!NOTE]
> Defining a chipher suite policy on <xref:System.Net.Security.SslStream> authentication will prevent the OS of the ability to decide which are the best cipher suites to negotiate with and will need of your attention to manually check and update this code. It is strongly recommended to hold off the use of this property and rely on your constantly updated OS policy.

## Remarks
Unlike the OS underlying SSL/TLS implementation, the order of the <xref:System.Net.Security.TlsCipherSuite> elements in this property does not determine their priority in the client-server negotiation. It is required to use OSX or Unix-based systems with OpenSSL 1.1.1 in order to initialize an instance of this class.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>